import { useState } from "react";
import { useAuth } from "../../contexts/AuthContext";
import { useTheme } from "../../contexts/useTheme";
import { useTasks } from "../../contexts/useTasks";
import { generalNotifications } from "../../services/toastNotifications";
import { Container } from "../../App.styled";
import {
  HeaderContainer,
  HeaderBlock,
  LogoContainer,
  HeaderNav,
  NewTaskButton,
  UserButton,
  UserPopup,
  UserName,
  UserEmail,
  ThemeContainer,
  ThemeCheckbox,
  LogoutButton,
  SearchContainer,
  SearchInput,
  SearchIcon,
  FilterContainer,
  FilterSelect,
  ClearButton,
  SortSelect,
  ExportButton,
} from "./Header.styled";

function Header({
  onShowExitModal,
  onShowNewCardModal,
  onSearch,
  onFilter,
  onSort,
  searchQuery,
  selectedFilter,
  selectedSort,
}) {
  const { user } = useAuth();
  const { isDarkTheme, toggleTheme } = useTheme();
  const { tasks } = useTasks();
  const [showUserPopup, setShowUserPopup] = useState(false);
  const [isSearchFocused, setIsSearchFocused] = useState(false);

  const toggleUserPopup = () => {
    setShowUserPopup(!showUserPopup);
  };

  const handleLogoutClick = () => {
    setShowUserPopup(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    onShowExitModal(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã—Ö–æ–¥–∞
  };

  const handleNewTaskClick = () => {
    onShowNewCardModal(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
  };

  const handleSearchChange = (e) => {
    if (onSearch) {
      onSearch(e.target.value);
    }
  };

  const handleFilterChange = (e) => {
    if (onFilter) {
      onFilter(e.target.value);
    }
  };

  const handleSortChange = (e) => {
    if (onSort) {
      onSort(e.target.value);
    }
  };

  const handleClearFilters = () => {
    if (onSearch) onSearch("");
    if (onFilter) onFilter("");
    if (onSort) onSort("");
  };

  const handleExport = () => {
    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
      const exportData = {
        exportDate: new Date().toISOString(),
        totalTasks: tasks.length,
        tasks: tasks.map((task) => ({
          id: task._id,
          title: task.title,
          description: task.description,
          topic: task.topic,
          status: task.status,
          date: task.date,
          createdAt: task.createdAt || new Date().toISOString(),
        })),
        statistics: {
          completed: tasks.filter((task) => task.status === "–ì–æ—Ç–æ–≤–æ").length,
          inProgress: tasks.filter((task) => task.status === "–í —Ä–∞–±–æ—Ç–µ").length,
          testing: tasks.filter((task) => task.status === "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
            .length,
          todo: tasks.filter((task) => task.status === "–ù—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å").length,
          noStatus: tasks.filter((task) => task.status === "–ë–µ–∑ —Å—Ç–∞—Ç—É—Å–∞")
            .length,
          categories: {
            "Web Design": tasks.filter((task) => task.topic === "Web Design")
              .length,
            Research: tasks.filter((task) => task.topic === "Research").length,
            Copywriting: tasks.filter((task) => task.topic === "Copywriting")
              .length,
          },
        },
      };

      // –°–æ–∑–¥–∞–µ–º Blob —Å –¥–∞–Ω–Ω—ã–º–∏
      const blob = new Blob([JSON.stringify(exportData, null, 2)], {
        type: "application/json",
      });

      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const url = URL.createObjectURL(blob);
      const link = document.createElement("a");
      link.href = url;
      link.download = `kanban_tasks_${
        new Date().toISOString().split("T")[0]
      }.json`;

      // –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);

      // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
      URL.revokeObjectURL(url);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      generalNotifications.loading("–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–¥–∞—á...");
      setTimeout(() => {
        generalNotifications.dismiss();
        console.log(`–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${tasks.length} –∑–∞–¥–∞—á –≤ JSON —Ñ–∞–π–ª`);
      }, 1000);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –∑–∞–¥–∞—á:", error);
      generalNotifications.validationError("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –∑–∞–¥–∞—á");
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ fallback –∑–Ω–∞—á–µ–Ω–∏—è
  const userName = user?.name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
  const userEmail = user?.login || user?.email || "user@example.com";

  return (
    <HeaderContainer>
      <Container>
        <HeaderBlock>
          <LogoContainer>
            <a href="" target="_self">
              <img
                src={isDarkTheme ? "images/logo_dark.png" : "images/logo.png"}
                alt="logo"
              />
            </a>
          </LogoContainer>

          {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è */}
          <SearchContainer>
            <SearchIcon $focused={isSearchFocused}>üîç</SearchIcon>
            <SearchInput
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –∑–∞–¥–∞—á..."
              value={searchQuery || ""}
              onChange={handleSearchChange}
              onFocus={() => setIsSearchFocused(true)}
              onBlur={() => setIsSearchFocused(false)}
            />
          </SearchContainer>

          <FilterContainer>
            <FilterSelect
              value={selectedFilter || ""}
              onChange={handleFilterChange}
            >
              <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
              <option value="Web Design">Web Design</option>
              <option value="Research">Research</option>
              <option value="Copywriting">Copywriting</option>
            </FilterSelect>

            <SortSelect value={selectedSort || ""} onChange={handleSortChange}>
              <option value="">–ë–µ–∑ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</option>
              <option value="title">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
              <option value="date">–ü–æ –¥–∞—Ç–µ</option>
              <option value="topic">–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
            </SortSelect>

            <ExportButton onClick={handleExport} title="–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–¥–∞—á –≤ JSON">
              üì• –≠–∫—Å–ø–æ—Ä—Ç
            </ExportButton>

            {(searchQuery || selectedFilter || selectedSort) && (
              <ClearButton onClick={handleClearFilters}>–°–±—Ä–æ—Å–∏—Ç—å</ClearButton>
            )}
          </FilterContainer>

          <HeaderNav>
            <NewTaskButton id="btnMainNew" onClick={handleNewTaskClick}>
              –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
            </NewTaskButton>
            <UserButton onClick={toggleUserPopup}>{userName}</UserButton>
            <UserPopup $isVisible={showUserPopup}>
              <UserName>{userName}</UserName>
              <UserEmail>{userEmail}</UserEmail>
              <ThemeContainer>
                <p>–¢–µ–º–Ω–∞—è —Ç–µ–º–∞</p>
                <ThemeCheckbox
                  name="checkbox"
                  checked={isDarkTheme}
                  onChange={toggleTheme}
                />
              </ThemeContainer>
              <LogoutButton type="button" onClick={handleLogoutClick}>
                –í—ã–π—Ç–∏
              </LogoutButton>
            </UserPopup>
          </HeaderNav>
        </HeaderBlock>
      </Container>
    </HeaderContainer>
  );
}

export default Header;
